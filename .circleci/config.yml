# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.13.7
    working_directory: /go/src/github.com/blues/note-go
    steps:
      - checkout
      - run: export GOOS=linux   GOARCH=386   ; ./build.sh && ./package.sh
      - run: export GOOS=linux   GOARCH=amd64 ; ./build.sh && ./package.sh
      - run: export GOOS=linux   GOARCH=arm   ; ./build.sh && ./package.sh
      - run: export GOOS=windows GOARCH=386   ; ./build.sh && ./package.sh
      - run: export GOOS=windows GOARCH=amd64 ; ./build.sh && ./package.sh
      - run: find ./build/ -type f -print0 | xargs --null file
      - store_artifacts:
          path: ./build/packages/
      - persist_to_workspace:
          root: .
          paths:
            - ./build/packages/

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      # We need to do a checkout so the CIRCLE_PROJECT_REPONAME and CIRCLE_SHA1 vars are populated for the command below.
      - checkout
      - attach_workspace:
          at: .
      - run: ls -l ./build/packages/
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION="$(git describe --dirty)"
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} 
                -c ${CIRCLE_SHA1} -delete ${VERSION} ./build/packages/

workflows:
  version: 2
  build-and-publish:
    jobs:
      - build
      - publish-github-release:
          requires:
            - build
          # filters:
          #   branches:
          #     ignore: /.*/
          #   tags:
          #     # match 1.2.3 etc. i.e. only tags that look like they're tagging a release.
          #     only: /^\d+\.\d+\.\d+$/

